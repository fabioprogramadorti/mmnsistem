@model MultiSis.Domain.Conta

<div style="margin-bottom: 30px; border: 1px solid #fff; border-radius: 5px;">
    <div class="panel panel-primary" style="margin-bottom:20px;">
        <div class="panel-heading">
            Conta
        </div>
        <div class="panel-body">
            <p>
                <div class="label">
                    @Html.LabelFor(model => model.Identificacao, "ID da conta")
                </div>
                <div class="text">
                    @Html.DisplayFor(model => model.Identificacao)
                </div>

                <div class="label">
                    @Html.LabelFor(model => model.IdPlanoNegocio, "Plano")
                </div>
                <div class="text">
                    @Html.DisplayFor(model => model.PlanoNegocio.Nome)
                </div>

                <div class="label">
                    @Html.LabelFor(model => model.DataAtivacao, "Data de Ativação")
                </div>
                <div class="text">
                    @Html.DisplayFor(model => model.DataAtivacao)
                </div>

                <div class="label">
                    @Html.LabelFor(model => model.Observacao, "Observação")
                </div>
                <div class="text">
                    @Html.DisplayFor(model => model.Observacao)
                </div>
            </p>
        </div>
    </div>
    <div class="panel panel-info">
        <div class="panel-heading">
            Atual Titular
        </div>
        <div class="panel-body">
            <p>
                @if (Model.Pessoa.CompletarCadastro)
                    {
                <div style="padding: 20px; margin-bottom: 10px; border: 1px solid #fff; border-radius: 5px; background-color: #f00;">
                    <b style="text-transform: uppercase;">O titular precisa primeiro completar seu cadastro no sistema</b>
                </div>
                    }
                <div class="label">
                    @Html.LabelFor(model => model.Pessoa.IdTipoPessoa, "Tipo de Pessoa")
                </div>
                <div class="text">
                    @Html.DisplayFor(x => x.Pessoa.TipoPessoa.Nome)
                </div>

                <div class="label">
                    @Html.LabelFor(model => model.Pessoa.Nome, "Nome Completo")
                </div>
                <div class="text">
                    @Html.DisplayFor(model => model.Pessoa.Nome)
                </div>

                <div class="label">
                    @Html.LabelFor(model => model.Pessoa.DataNascimento, "Data de Nascimento")
                </div>
                <div class="text">
                    @Html.DisplayFor(model => model.Pessoa.DataNascimento, new { @style = "width: 10% !important;" })
                </div>

                <div class="label">
                    @Html.LabelFor(model => model.Pessoa.Email, "E-Mail")
                </div>
                <div class="text">
                    @Html.DisplayFor(model => model.Pessoa.Email, new { @required = "required", @type = "email" })
                </div>

                <div class="label">
                    @Html.LabelFor(model => model.Pessoa.CPFCNPJ, "CPF / CNPJ")
                </div>
                <div class="text">
                    @Html.DisplayFor(model => model.Pessoa.CPFCNPJ, new { @required = "required" })
                </div>
            </p>
        </div>
    </div>
</div>
